// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleHub.Persistence.Context;

#nullable disable

namespace VehicleHub.Persistence.Migrations
{
    [DbContext(typeof(VehicleHubDbContext))]
    [Migration("20240914092517_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VehicleHub.Domain.Vehicles.Types.Boat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Boats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Red",
                            Created = new DateTime(2024, 9, 14, 12, 25, 17, 179, DateTimeKind.Local).AddTicks(9771),
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Color = "White",
                            Created = new DateTime(2024, 9, 14, 12, 25, 17, 179, DateTimeKind.Local).AddTicks(9772),
                            Status = 1
                        });
                });

            modelBuilder.Entity("VehicleHub.Domain.Vehicles.Types.Bus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Buses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "White",
                            Created = new DateTime(2024, 9, 14, 12, 25, 17, 179, DateTimeKind.Local).AddTicks(9747),
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Color = "Black",
                            Created = new DateTime(2024, 9, 14, 12, 25, 17, 179, DateTimeKind.Local).AddTicks(9749),
                            Status = 1
                        });
                });

            modelBuilder.Entity("VehicleHub.Domain.Vehicles.Types.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HeadlightsOn")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfWheels")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Red",
                            Created = new DateTime(2024, 9, 14, 12, 25, 17, 179, DateTimeKind.Local).AddTicks(9583),
                            HeadlightsOn = false,
                            NumberOfWheels = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Color = "Blue",
                            Created = new DateTime(2024, 9, 14, 12, 25, 17, 179, DateTimeKind.Local).AddTicks(9586),
                            HeadlightsOn = false,
                            NumberOfWheels = 4,
                            Status = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
